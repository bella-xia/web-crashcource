{"ast":null,"code":"var _jsxFileName = \"/Users/bellaxia/Desktop/today-I-learned/src/NewFactForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport supabase from \"./supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  CATEGORIES\n} = require(\"./Data.js\");\nfunction isValidHttpUrl(string) {\n  let url;\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\nfunction NewFactForm(_ref) {\n  _s();\n  let {\n    facts,\n    setFacts,\n    setShowForm\n  } = _ref;\n  const [text, setText] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const textLength = text.length;\n  async function handleSubmit(e) {\n    // 1. Prevent browser from reload\n    e.preventDefault();\n    // 2. Check if data is valid. If so create a new fact\n    setIsUploading(true);\n    if (text && isValidHttpUrl(source) && category && textLength <= 200) {\n      // 3. Upload to supabase\n      const {\n        data: newFact,\n        error\n      } = await supabase.from(\"facts\").insert([{\n        text,\n        source,\n        category\n      }]).select();\n\n      // 4. Add the new fact to the UI\n      if (!error) setFacts(facts => [newFact[0], ...facts]);\n\n      // 5. Reset the input fields\n      setText(\"\");\n      setSource(\"\");\n      setCategory(\"\");\n\n      // 6. Close the entire form\n      setShowForm(false);\n    }\n    setIsUploading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"fact-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Share a fact with the world...\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      disabled: isUploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: 200 - textLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Trustworthy sourse...\",\n      value: source,\n      onChange: e => setSource(e.target.value),\n      disabled: isUploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      disabled: isUploading,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat.name,\n        children: cat.name\n      }, cat.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-large\",\n      disabled: isUploading,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(NewFactForm, \"ThcKSK5sgEOE8E1cm0hi46DKohY=\");\n_c = NewFactForm;\nexport default NewFactForm;\nvar _c;\n$RefreshReg$(_c, \"NewFactForm\");","map":{"version":3,"names":["useState","supabase","jsxDEV","_jsxDEV","CATEGORIES","require","isValidHttpUrl","string","url","URL","_","protocol","NewFactForm","_ref","_s","facts","setFacts","setShowForm","text","setText","source","setSource","category","setCategory","isUploading","setIsUploading","textLength","length","handleSubmit","e","preventDefault","data","newFact","error","from","insert","select","className","onSubmit","children","type","placeholder","value","onChange","target","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","name","_c","$RefreshReg$"],"sources":["/Users/bellaxia/Desktop/today-I-learned/src/NewFactForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport supabase from \"./supabase\";\nconst { CATEGORIES } = require(\"./Data.js\");\n\nfunction isValidHttpUrl(string) {\n  let url;\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nfunction NewFactForm({ facts, setFacts, setShowForm }) {\n  const [text, setText] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const textLength = text.length;\n\n  async function handleSubmit(e) {\n    // 1. Prevent browser from reload\n    e.preventDefault();\n    // 2. Check if data is valid. If so create a new fact\n    setIsUploading(true);\n    if (text && isValidHttpUrl(source) && category && textLength <= 200) {\n      // 3. Upload to supabase\n      const { data: newFact, error } = await supabase\n        .from(\"facts\")\n        .insert([{ text, source, category }])\n        .select();\n\n      // 4. Add the new fact to the UI\n      if (!error) setFacts((facts) => [newFact[0], ...facts]);\n\n      // 5. Reset the input fields\n      setText(\"\");\n      setSource(\"\");\n      setCategory(\"\");\n\n      // 6. Close the entire form\n      setShowForm(false);\n    }\n    setIsUploading(false);\n  }\n\n  return (\n    <form className=\"fact-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Share a fact with the world...\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        disabled={isUploading}\n      />\n      <span>{200 - textLength}</span>\n      <input\n        type=\"text\"\n        placeholder=\"Trustworthy sourse...\"\n        value={source}\n        onChange={(e) => setSource(e.target.value)}\n        disabled={isUploading}\n      />\n      <select\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n        disabled={isUploading}\n      >\n        <option value=\"\">Choose category:</option>\n        {CATEGORIES.map((cat) => (\n          <option key={cat.name} value={cat.name}>\n            {cat.name}\n          </option>\n        ))}\n        ;\n      </select>\n      <button className=\"btn btn-large\" disabled={isUploading}>\n        Post\n      </button>\n    </form>\n  );\n}\n\nexport default NewFactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}