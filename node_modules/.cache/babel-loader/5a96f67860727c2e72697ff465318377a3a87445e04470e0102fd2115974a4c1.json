{"ast":null,"code":"var _jsxFileName = \"/Users/bellaxia/Desktop/today-I-learned/src/NewFactForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isValidHttpUrl(string) {\n  let url;\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\nfunction NewFactForm(_ref) {\n  _s();\n  let {\n    facts,\n    setFacts,\n    setShowForm\n  } = _ref;\n  const [text, setText] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const textLength = text.length;\n  function handleSubmit(e) {\n    // 1. Prevent browser from reload\n    e.preventDefault();\n    // 2. Check if data is valid. If so create a new fact\n    if (text && isValidHttpUrl(source) && category && textLength <= 200) {\n      // 3. Create a new fact object\n      const newFact = {\n        id: Math.round(Math.random() * 100000000),\n        text,\n        source,\n        category,\n        votesInteresting: 0,\n        votesMindblowing: 0,\n        votesFalse: 0,\n        createdIn: new Date().getFullYear()\n      };\n\n      // 4. Add the new fact to the UI\n      setFacts(facts => [newFact, ...facts]);\n\n      // 5. Reset the input fields\n      setText(\"\");\n      setSource(\"\");\n      setCategory(\"\");\n\n      // 6. Close the entire form\n      setShowForm(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"fact-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Share a fact with the world...\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: 200 - textLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Trustworthy sourse...\",\n      value: source,\n      onChange: e => setSource(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat.name,\n        children: cat.name\n      }, cat.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-large\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(NewFactForm, \"peGKo5XaPmH+Prgp8Pua3IENBLg=\");\n_c = NewFactForm;\nexport default NewFactForm;\nvar _c;\n$RefreshReg$(_c, \"NewFactForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","isValidHttpUrl","string","url","URL","_","protocol","NewFactForm","_ref","_s","facts","setFacts","setShowForm","text","setText","source","setSource","category","setCategory","textLength","length","handleSubmit","e","preventDefault","newFact","id","Math","round","random","votesInteresting","votesMindblowing","votesFalse","createdIn","Date","getFullYear","className","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","CATEGORIES","map","cat","name","_c","$RefreshReg$"],"sources":["/Users/bellaxia/Desktop/today-I-learned/src/NewFactForm.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction isValidHttpUrl(string) {\n  let url;\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nfunction NewFactForm({ facts, setFacts, setShowForm }) {\n  const [text, setText] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const textLength = text.length;\n\n  function handleSubmit(e) {\n    // 1. Prevent browser from reload\n    e.preventDefault();\n    // 2. Check if data is valid. If so create a new fact\n    if (text && isValidHttpUrl(source) && category && textLength <= 200) {\n      // 3. Create a new fact object\n      const newFact = {\n        id: Math.round(Math.random() * 100000000),\n        text,\n        source,\n        category,\n        votesInteresting: 0,\n        votesMindblowing: 0,\n        votesFalse: 0,\n        createdIn: new Date().getFullYear(),\n      };\n\n      // 4. Add the new fact to the UI\n      setFacts((facts) => [newFact, ...facts]);\n\n      // 5. Reset the input fields\n      setText(\"\");\n      setSource(\"\");\n      setCategory(\"\");\n\n      // 6. Close the entire form\n      setShowForm(false);\n    }\n  }\n\n  return (\n    <form className=\"fact-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Share a fact with the world...\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <span>{200 - textLength}</span>\n      <input\n        type=\"text\"\n        placeholder=\"Trustworthy sourse...\"\n        value={source}\n        onChange={(e) => setSource(e.target.value)}\n      />\n      <select value={category} onChange={(e) => setCategory(e.target.value)}>\n        <option value=\"\">Choose category:</option>\n        {CATEGORIES.map((cat) => (\n          <option key={cat.name} value={cat.name}>\n            {cat.name}\n          </option>\n        ))}\n        ;\n      </select>\n      <button className=\"btn btn-large\">Post</button>\n    </form>\n  );\n}\n\nexport default NewFactForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,cAAcA,CAACC,MAAM,EAAE;EAC9B,IAAIC,GAAG;EACP,IAAI;IACFA,GAAG,GAAG,IAAIC,GAAG,CAACF,MAAM,CAAC;EACvB,CAAC,CAAC,OAAOG,CAAC,EAAE;IACV,OAAO,KAAK;EACd;EACA,OAAOF,GAAG,CAACG,QAAQ,KAAK,OAAO,IAAIH,GAAG,CAACG,QAAQ,KAAK,QAAQ;AAC9D;AAEA,SAASC,WAAWA,CAAAC,IAAA,EAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAAJ,IAAA;EACnD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMqB,UAAU,GAAGN,IAAI,CAACO,MAAM;EAE9B,SAASC,YAAYA,CAACC,CAAC,EAAE;IACvB;IACAA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA,IAAIV,IAAI,IAAIZ,cAAc,CAACc,MAAM,CAAC,IAAIE,QAAQ,IAAIE,UAAU,IAAI,GAAG,EAAE;MACnE;MACA,MAAMK,OAAO,GAAG;QACdC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,SAAS,CAAC;QACzCf,IAAI;QACJE,MAAM;QACNE,QAAQ;QACRY,gBAAgB,EAAE,CAAC;QACnBC,gBAAgB,EAAE,CAAC;QACnBC,UAAU,EAAE,CAAC;QACbC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;MACnC,CAAC;;MAED;MACAvB,QAAQ,CAAED,KAAK,IAAK,CAACc,OAAO,EAAE,GAAGd,KAAK,CAAC,CAAC;;MAExC;MACAI,OAAO,CAAC,EAAE,CAAC;MACXE,SAAS,CAAC,EAAE,CAAC;MACbE,WAAW,CAAC,EAAE,CAAC;;MAEf;MACAN,WAAW,CAAC,KAAK,CAAC;IACpB;EACF;EAEA,oBACEZ,OAAA;IAAMmC,SAAS,EAAC,WAAW;IAACC,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,gBACjDrC,OAAA;MACEsC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gCAAgC;MAC5CC,KAAK,EAAE3B,IAAK;MACZ4B,QAAQ,EAAGnB,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACoB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC,eACF9C,OAAA;MAAAqC,QAAA,EAAO,GAAG,GAAGlB;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAC/B9C,OAAA;MACEsC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,uBAAuB;MACnCC,KAAK,EAAEzB,MAAO;MACd0B,QAAQ,EAAGnB,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACoB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C,eACF9C,OAAA;MAAQwC,KAAK,EAAEvB,QAAS;MAACwB,QAAQ,EAAGnB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;MAAAH,QAAA,gBACpErC,OAAA;QAAQwC,KAAK,EAAC,EAAE;QAAAH,QAAA,EAAC;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EACzCC,UAAU,CAACC,GAAG,CAAEC,GAAG,iBAClBjD,OAAA;QAAuBwC,KAAK,EAAES,GAAG,CAACC,IAAK;QAAAb,QAAA,EACpCY,GAAG,CAACC;MAAI,GADED,GAAG,CAACC,IAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGtB,CAAC,EAAC,GAEL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACT9C,OAAA;MAAQmC,SAAS,EAAC,eAAe;MAAAE,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1C;AAEX;AAACrC,EAAA,CA/DQF,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAiEpB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}