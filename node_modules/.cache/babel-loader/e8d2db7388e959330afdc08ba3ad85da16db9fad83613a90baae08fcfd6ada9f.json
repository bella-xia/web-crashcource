{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bellaxia/Desktop/today-I-learned/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _defineProperty from\"/Users/bellaxia/Desktop/today-I-learned/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _asyncToGenerator from\"/Users/bellaxia/Desktop/today-I-learned/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/bellaxia/Desktop/today-I-learned/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import supabase from\"./supabase\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require(\"./Data.js\"),CATEGORIES=_require.CATEGORIES;function Fact(_ref){var fact=_ref.fact,setFacts=_ref.setFacts;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isUpdating=_useState2[0],setIsUpdating=_useState2[1];var isDisputed=fact.votesInteresting+fact.votesMindblowing<fact.votesFalse;function handleVote(_x){return _handleVote.apply(this,arguments);}function _handleVote(){_handleVote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(columnName){var _yield$supabase$from$,updatedFact,error;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:setIsUpdating(true);_context.next=3;return supabase.from(\"facts\").update(_defineProperty({},columnName,fact[columnName]+1)).eq(\"id\",fact.id).select();case 3:_yield$supabase$from$=_context.sent;updatedFact=_yield$supabase$from$.data;error=_yield$supabase$from$.error;setIsUpdating(false);if(!error)setFacts(function(facts){return facts.map(function(f){return f.id===fact.id?updatedFact[0]:f;});});case 8:case\"end\":return _context.stop();}},_callee);}));return _handleVote.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"li\",{className:\"fact\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[isDisputed?/*#__PURE__*/_jsx(\"span\",{className:\"disputed\",children:\"[\\u26D4\\uFE0F DISPUTED]\"}):null,fact.text,/*#__PURE__*/_jsx(\"a\",{className:\"source\",href:fact.source,target:\"_blank\",rel:\"noreferrer\",children:\"(Source)\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"tag\",style:{backgroundColor:CATEGORIES.find(function(cat){return cat.name===fact.category;}).color},children:fact.category}),/*#__PURE__*/_jsxs(\"div\",{className:\"vote-buttons\",disabled:isUpdating,children:[/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return handleVote(\"votesInteresting\");},children:[\"\\uD83D\\uDC4D \",fact.votesInteresting]}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return handleVote(\"votesMindblowing\");},children:[\"\\uD83E\\uDD2F \",fact.votesMindblowing]}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return handleVote(\"votesFalse\");},children:[\"\\u26D4\\uFE0F \",fact.votesFalse]})]})]});}export default Fact;","map":{"version":3,"names":["supabase","useState","jsx","_jsx","jsxs","_jsxs","_require","require","CATEGORIES","Fact","_ref","fact","setFacts","_useState","_useState2","_slicedToArray","isUpdating","setIsUpdating","isDisputed","votesInteresting","votesMindblowing","votesFalse","handleVote","_x","_handleVote","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","columnName","_yield$supabase$from$","updatedFact","error","wrap","_callee$","_context","prev","next","from","update","_defineProperty","eq","id","select","sent","data","facts","map","f","stop","className","children","text","href","source","target","rel","style","backgroundColor","find","cat","name","category","color","disabled","onClick"],"sources":["/Users/bellaxia/Desktop/today-I-learned/src/Fact.js"],"sourcesContent":["import supabase from \"./supabase\";\nimport { useState } from \"react\";\nconst { CATEGORIES } = require(\"./Data.js\");\nfunction Fact({ fact, setFacts }) {\n  const [isUpdating, setIsUpdating] = useState(false);\n  const isDisputed =\n    fact.votesInteresting + fact.votesMindblowing < fact.votesFalse;\n  async function handleVote(columnName) {\n    setIsUpdating(true);\n    const { data: updatedFact, error } = await supabase\n      .from(\"facts\")\n      .update({\n        [columnName]: fact[columnName] + 1,\n      })\n      .eq(\"id\", fact.id)\n      .select();\n    setIsUpdating(false);\n\n    if (!error)\n      setFacts((facts) =>\n        facts.map((f) => (f.id === fact.id ? updatedFact[0] : f))\n      );\n  }\n  return (\n    <li className=\"fact\">\n      <p>\n        {isDisputed ? <span className=\"disputed\">[‚õîÔ∏è DISPUTED]</span> : null}\n        {fact.text}\n        <a\n          className=\"source\"\n          href={fact.source}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          (Source)\n        </a>\n      </p>\n      <span\n        className=\"tag\"\n        style={{\n          backgroundColor: CATEGORIES.find((cat) => cat.name === fact.category)\n            .color,\n        }}\n      >\n        {fact.category}\n      </span>\n      <div className=\"vote-buttons\" disabled={isUpdating}>\n        <button onClick={() => handleVote(\"votesInteresting\")}>\n          üëç {fact.votesInteresting}\n        </button>\n        <button onClick={() => handleVote(\"votesMindblowing\")}>\n          ü§Ø {fact.votesMindblowing}\n        </button>\n        <button onClick={() => handleVote(\"votesFalse\")}>\n          ‚õîÔ∏è {fact.votesFalse}\n        </button>\n      </div>\n    </li>\n  );\n}\n\nexport default Fact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}